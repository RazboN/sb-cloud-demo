version: "3.9"

services:
  #databases
  menu-backend-db:
    environment:
      - POSTGRES_PASSWORD=123
      POSTGRES_DB=MENU_DB
    image: postgres
    container_name: MENUDB
    ports:
      - "5432:5432"
    volumes:
      - menuDbVol:/app/services/menu
    restart: always

  order-backend-db:
    environment:
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=ORDERS_DB
    image: postgres
    container_name: ORDERDB
    ports:
      - "5431:5432"
    volumes:
      - orderDbVol:/app/services/order
    restart: always

  keycloak_serv:
    image: quay.io/keycloak/keycloak:latest
    command: start-dev
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: keycloak_db
      KC_DB_URL_DATABASE: ADMIN_USER
      KC_DB_PASSWORD: 123
      KC_DB_USERNAME: kafe_admin
      KC_DB_SCHEMA: public
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8091:8080"
    depends_on: 
      - keycloak_db

  keycloak_db:
    image: postgres:latest
    command: postgres -c 'max_connections=200'
    volumes: 
      - pgdata_keycloak_vol:/var/lib/postgres/sql/data
    environment:
      POSTGRES_DB: ADMIN_USER
      POSTGRES_USER: kafe_admin
      POSTGRES_PASSWORD: 123
    healthcheck:
      test: "exit 0"
    ports:
      - "5450:5432"

  users-backend-db:
    environment:
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=USERS_DB
    image: postgres
    container_name: ADMINDB
    ports:
      - "5431:5432"
    volumes:
      - adminDbVol:/app/services/admin
    restart: always

  #keycloak
  keycloak-service:
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    container_name: KEYCLOAK
    ports:
      - "8001:8080"
    command:
      - start-dev
    restart: always

  #backend services
  
  discovery-server:
    image: discovery-server
    container_name: discovery-server
    build:
      context: ./discovery-server
      dockerfile: Dockerfile
    ports:
      - "8090:8090"
    restart: always

  config-server:
    image: config-server
    container_name: config-server
    build:
      context: ./config-server
      dockerfile: Dockerfile
    depends_on:
      - discovery-server
    ports:
      - "1080:1080"
    restart: always

  admin-backend: ###

  user-query-service:
    environment:
      - WRITE_ENABLED=false
      - APP_PORT=1007
    image: user-service/query
    container_name: user-command-service
    build:
      context: ./kafe-backend/user/user-producer
      dockerfile: Dockerfile-query
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "1007:1007"
    restart: always

  user-command-service:
    environment:
      - WRITE_ENABLED=true
      - APP_PORT=1006
    image: user-service/command
    container_name: user-command-service
    build:
      context: ./kafe-backend/user/user-consumer
      dockerfile: Dockerfile
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "1006:1006"
    restart: always

  user-consumer:
    environment:
      - APP_PORT=1010
    image: user-service/consumer
    container_name: user-consumer
    build:
      context: ./kafe-backend/user/user-consumer
      dockerfile: Dockerfile
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "1010:1010"
    restart: always

  menu-command-service:
    environment:
      - WRITE_ENABLED=true
      - APP_PORT=1001
    image: menu-service/command
    container_name: menu-command-service
    build:
      context: ./kafe-backend/menu
      dockerfile: Dockerfile-command
    depends_on:
      - discovery-server
      - menu-backend-db
    ports:
      - "1001:1001"
    restart: always

  menu-query-service:
    environment:
      - WRITE_ENABLED=false
      - APP_PORT=1002 
    image: menu-service/query
    container_name: menu-query-service
    build:
      context: ./kafe-backend/menu
      dockerfile: Dockerfile-query
    depends_on:
      - discovery-server
      - menu-backend-db
    ports:
      - "1002:1002"
    restart: always

  order-command-service:
    environment:
      - WRITE_ENABLED=true
      - APP_PORT=1004
    image: menu-service/command
    container_name: order-command-service
    build:
      context: ./kafe-backend/order
      dockerfile: Dockerfile-command
    depends_on:
      - discovery-server
      - menu-backend-db
    ports:
      - "1004:1004"
    restart: always

  order-query-service:
    environment:
      - WRITE_ENABLED=false
      - APP_PORT=1003
    image: menu-service/query
    container_name: order-query-service
    build:
      context: ./kafe-backend/order
      dockerfile: Dockerfile-query
    depends_on:
      - discovery-server
      - order-backend-db
    ports:
      - "1003:1003"
    restart: always
  
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
    - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    ports:
    - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
    depends_on:
      - zookeeper

#networks:
#  kolayKafeNetwork:

volumes:
  menuDbVol:
  adminDbVol:
  orderDbVol:
  pgdata_keycloak_vol: